name: .NET

on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - master


jobs:
  build:

    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 100
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
    
    - uses: dorny/paths-filter@v2
      id: changes-AuthService
      with:
        filters: |
          changed:
            - '.github/**'
            - 'BaseService/**'
            - 'DAOLibrary/**'
            - 'DTOLibrary/**'
            - 'AuthService/**'

            
    - uses: dorny/paths-filter@v2
      id: changes-AdminService
      with:
        filters: |
          changed:
            - '.github/**'
            - 'BaseService/**'
            - 'DAOLibrary/**'
            - 'DTOLibrary/**'
            - 'AdminService/**'
            
    - uses: dorny/paths-filter@v2
      id: changes-PassService
      with:
        filters: |
          changed:
            - '.github/**'
            - 'BaseService/**'
            - 'DAOLibrary/**'
            - 'DTOLibrary/**'
            - 'PassService/**'
            
    - uses: dorny/paths-filter@v2
      id: changes-OrganizationService
      with:
        filters: |
          changed:
            - '.github/**'
            - 'BaseService/**'
            - 'DAOLibrary/**'
            - 'DTOLibrary/**'
            - 'OrganizationService/**'


    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: AWS CLI
      run: dotnet tool install -g Amazon.Lambda.Tools
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Auth Service
      working-directory: AuthService
      if: steps.changes-AuthService.outputs.changed == 'true'
      run: dotnet lambda package
    - name: Deploy to Lambda Auth Service
      if: steps.changes-AuthService.outputs.changed == 'true'
      run: aws lambda update-function-code --function-name Auth-Service --zip-file fileb://AuthService/bin/Release/net6.0/AuthService.zip
      
    - name: Build Admin Service
      working-directory: AdminService
      if: steps.changes-AdminService.outputs.changed == 'true'
      run: dotnet lambda package
    - name: Deploy to Lambda Admin Service
      if: steps.changes-AdminService.outputs.changed == 'true'
      run: aws lambda update-function-code --function-name Admin-Service --zip-file fileb://AdminService/bin/Release/net6.0/AdminService.zip

    - name: Build Pass Service
      working-directory: PassService
      if: steps.changes-PassService.outputs.changed == 'true'
      run: dotnet lambda package
    - name: Deploy to Lambda Pass Service
      if: steps.changes-PassService.outputs.changed == 'true'
      run: aws lambda update-function-code --function-name Pass-Service --zip-file fileb://PassService/bin/Release/net6.0/PassService.zip
    
    - name: Build Organization Service
      working-directory: OrganizationService
      if: steps.changes-OrganizationService.outputs.changed == 'true'
      run: dotnet lambda package
    - name: Deploy to Lambda Organization Service
      if: steps.changes-OrganizationService.outputs.changed == 'true'
      run: aws lambda update-function-code --function-name OrganizationService --zip-file fileb://OrganizationService/bin/Release/net6.0/OrganizationService.zip
   
      
      
      
